# Generated by Django 5.1 on 2025-09-10 15:43

import dashboard.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClubGeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club_name', models.CharField(default='Nugata FC', max_length=255)),
                ('crest', models.ImageField(blank=True, null=True, upload_to='team_logos/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='favicons/')),
                ('primary_color', models.CharField(blank=True, default='#228B22', max_length=7)),
                ('secondary_color', models.CharField(blank=True, default='#FFD700', max_length=7)),
                ('neutral_dark', models.CharField(blank=True, default='#000000', max_length=7)),
                ('neutral_light', models.CharField(blank=True, default='#FFFFFF', max_length=7)),
                ('home_ground', models.CharField(blank=True, max_length=255)),
                ('training_ground', models.CharField(blank=True, max_length=255)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=50)),
                ('site_title', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.TextField(blank=True)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ClubIntegrationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mailchimp_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('mailchimp_list_id', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp_group_link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClubRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('executive', 'Executive'), ('technical', 'Technical Staff')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=9, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='VisitorSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=100, unique=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('browser', models.CharField(blank=True, max_length=100)),
                ('operating_system', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('url_name', models.CharField(blank=True, help_text='Django URL name', max_length=100)),
                ('external_url', models.URLField(blank=True, help_text='Optional external link')),
                ('order', models.PositiveIntegerField(default=0, help_text='Lower numbers appear first')),
                ('settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='dashboard.clubgeneralsettings')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ClubTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='team_members/')),
                ('name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_joined', models.DateField()),
                ('date_left', models.DateField(blank=True, null=True)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.clubrole')),
                ('user_account', models.OneToOneField(blank=True, help_text='Link this team member to a CMS user (optional).', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('season', models.ForeignKey(default=dashboard.models.get_current_season, on_delete=django.db.models.deletion.CASCADE, related_name='club_members', to='dashboard.season')),
            ],
        ),
        migrations.AddField(
            model_name='clubgeneralsettings',
            name='current_season',
            field=models.ForeignKey(blank=True, default=dashboard.models.get_current_season, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='general_settings', to='dashboard.season'),
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('referrer', models.CharField(blank=True, max_length=500, null=True)),
                ('session_key', models.CharField(max_length=100)),
                ('visitor_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_views', to='dashboard.visitorsession')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter / X'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('tiktok', 'TikTok')], max_length=20)),
                ('url', models.URLField()),
                ('club_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='dashboard.clubgeneralsettings')),
            ],
            options={
                'unique_together': {('club_settings', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='StaffSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.ForeignKey(default=dashboard.models.get_current_season, on_delete=django.db.models.deletion.CASCADE, to='dashboard.season')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.clubteammember')),
            ],
            options={
                'unique_together': {('staff', 'season')},
            },
        ),
    ]
